Properties localProps = getSigningProperties()

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    signingConfigs {
        release {
            storeFile file(localProps.getProperty('RELEASE_KEYSTORE_PATH','fillhere'))
            storePassword localProps.getProperty('RELEASE_KEYSTORE_PW','')
            keyAlias localProps.getProperty('RELEASE_KEY_ALIAS','')
            keyPassword localProps.getProperty('RELEASE_KEY_PW','')
        }
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        renderscriptTargetApi 20
        renderscriptSupportModeEnabled  true

        buildConfigField "String", "GIT_REV", "\"" + getGitRev() + "\""
        buildConfigField "String", "GIT_BRANCH", "\"" + getGitBranch() + "\""
        buildConfigField "String", "GIT_DATE", "\"" + getGitCommitDate() + "\""
        buildConfigField "String", "BUILD_NUMBER", "\"" + getCiBuildNumber() + "\""
        buildConfigField "String", "BUILD_DATE", "\"" + getBuildTime() + "\""
        buildConfigField "boolean", "IS_CI_BUILD", "${isCiBuild()}"
//        ndk {
//            moduleName "libblur"
//            cFlags "-fvisibility=hidden -W -Wall -ffast-math -O3 -funroll-loops"
//            ldLibs "log", "jnigraphics"
//        }
    }

    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt")
            proguardFiles 'proguard-rules.txt'
            //jniDebuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt")
            proguardFiles 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}-${variant.name}-${variant.versionName}.apk"
        }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.squareup.picasso:picasso:2.71828'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'

    implementation('at.favre.lib.hood:hood-extended:0.5.1')

    implementation project(':tablefixedheader')
//    compile project(':paralloid')
//    compile project(':ne10blur')
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
repositories {
    mavenCentral()
}




